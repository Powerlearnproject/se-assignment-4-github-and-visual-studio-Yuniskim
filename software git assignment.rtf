{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 SOFTWARE ENGINEERING ASSIGNMENT\par
GitHub- This is a website that allows developers and writers to store or manage code as well as track and control changes. It allows project management and collaboration.\par
 The primary features and function include:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 GitHub Copilot- This is an open AI that suggests code snippet, methods and algorithms for best code practices.\par
{\pntext\f1\'B7\tab}Repositories- This are files that hold projects which allow version control.\par
{\pntext\f1\'B7\tab}Forking-Thi allows one to create a vbersion of someone else's project.It allows working on projects without altering the original code\par
{\pntext\f1\'B7\tab}Issue Tracking- Has tools for handling tasks, improving and debuigging.\par
{\pntext\f1\'B7\tab}GitHub Actions- These automates tasks within github\par
{\pntext\f1\'B7\tab}Code Review- This enables code review by enabling members to comment on specific tasks.\par

\pard\ri-900\sa200\sl276\slmult1\qc GitHub supports collaborative software development, by allowing team members to work together as a team while located in different geagraphical areas. Project managers and developers come together to track and update their work or make changes.\par

\pard\sa200\sl276\slmult1 The GitHub repository is a file  where you store your code. Each repository contain a different version of the code.\par
To create a new repository. Click on new repository in the opper right corner of any page.Select a name for your repo and add a description for your repo, choose a repository visibility and initialize the repository with a README  then continue to create the repository. It is essential to include: A README, repository name, a description, and the visibility of the repo\par
\par
GitHub allows programmers to work as a team by allowing every team member to work from any location facilitating colaboration\par

\pard\sa200\sl276\slmult1\tx1500\tx2900 Version control in Git allows developers to manage and track changes in a software project. Git is a version control system allows developers to access the entire codebase and history  that shows modification made to a specific version.\par
GitHub enhances version control by keeping track of every modification to the code, in a special kind of database.\par
A branch  is a separete version of the main repository. It allows one to fix bugs, develope features or experiment with new ideas in a contained area. We usually create a branch from main.\par
To create a branch use git branch and give the name of the branch i.e  git branch yunis. Run git checkout to make sure you moved to the specified branch i.e git checkout yunis, now we are in a new  branch. Open the editor and type the changes to make. Check the status of the current file. Git add to track all the changes. Now we can merge the branch to the main. Git checkout master to switch to branch master then merge the current branch master with yunis i.e git merge yunis.\par
Git pull allows collaborators to stay up to date by getting the local copy of the most recent changes.\par
pull is a combination of fetch and merge. It is used to pull all changes from a remote repository into the branch you are working on.\par
 To create a pull request 'git fetch origin' updates to see what has changed on GitHub. Run git status to confirm the updates then merge.\par
A pull request is used to push local changes into a shared repository that facilitate code reviews and collaboration.\par
Steps to create and review a pull request\par
Create a new git branch to work locally using the following command:\par
git -b BRANCH_NAME\par
Implement changes and push them frequently (so that they do not get lost) using the following command:\par
git add NAME_OF_THE_FILE\par
git commit -m "DESCRIBE YOUR RECENT CHANGES"\par
After you have finished the implementation and committed your changes locally, you should get the latest changes from the shared repository to ensure there are no conflicting changes. You can get the latest changes using the following command:\par
git pull origin BRANCH_NAME\par
Push your changes to the remote repository using the following command:\par
git push --set-upstream-to origin REMOTE_BRANCH_NAME\par
Navigate to the user interface of the platform where your shared repository is located (GitLab, GitHub, BitBucket). There you are asked to write the name of the pull request and a short description. You also have the option to assign it to someone from your team to review it.\par
GitHub Actions  enables one to perform different automations within a GitHub reposito. It lets developers create custom workflows that can  be used to automate development process such as building, deploying code.ry and testing.\par
It transforms a routine project management and makes it easy and engaging. You can pick already created workflow or create your own. With the help of GitHub Actions, you can accomplish tasks like welcoming new contributors, recognizing their efforts, and creating a positive atmosphere for the existing community members.\par
Multiple developers work on separate features and when the feature is complete,  they merge their code with the central repository of a project.Continuous deliveries entail running automated building tools to package an artifact to be delivered to the end users.\par
Simple continuous integration and continuous delivery using github actions\par
Build workflow: This helps us build our code from the source ensuring the code works well on all platforms and environments\par
Test workflow: This runs tests (unit and integrated) on every pull request to your repository ensuring the code is bug-free\par
Deploy workflow: This helps developers to deploy code to a production environment.\par
Notification workflow: This is used to send a notification when an event occurs in a repository.\par

\pard\sa200\sl360\slmult1\tx1500\tx2900 Visual studio\fs24  is an integrated development environment that is used to write, edit, debug and build code. its key features include: a code editor, debugger, and architecture explorer. \par
visual studio code is a code editor developed by microsoft.\par
To integrate a github repository with visual studio pick an existing or new folder on your computer and open it in VS Code. In the source control view, select the initialize repository button, this creates a new git repository in the current folder allowing tracking code changes.Having your source code in a remote repository helps to backup your code, collaborate with others and autoimate your workflow with github actions. When you click the publish button in the source control view you can then write a name and descriptionfor the repository and set it as private or public.\par
A debugger is a specialized developer tool that attaches to your running app and allows to inspect your code.\par
 Developers can use debugging tools to fix code issues while writing in  the IDE's. This ensures reliability, functionality,and quality of the final product.\par
Integrating GitHub and Visual Studio creates a powerful environment for collaborative development. GitHub handles version control, code review, project management, and CI/CD, while Visual Studio provides a robust development environment with integrated tools for code management, real-time collaboration, and environment synchronization. Together, they streamline the development process, enhance collaboration, and improve code quality.\fs22\par

\pard\sa200\sl276\slmult1\tx1500\tx2900 {{\field{\*\fldinst{HYPERLINK https://www.w3schools.com/git/git_branch.asp?remote=github }}{\fldrslt{https://www.w3schools.com/git/git_branch.asp?remote=github\ul0\cf0}}}}\f0\fs22\par
}
 